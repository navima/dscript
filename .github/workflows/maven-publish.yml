name: Package and Publish

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Calculate artifact version
      id: version
      run: |
        BASEPROJECTVERSION=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Project version is $BASEPROJECTVERSION"
        DATE=$(date -u '+%Y%m%d%H%M')
        echo "Date is $DATE"
        PROJECTVERSION="$BASEPROJECTVERSION.$DATE"
        echo "VERSION=$PROJECTVERSION" >> $GITHUB_ENV

    - name: Set Maven version
      run: |
        mvn -B versions:set -DnewVersion="${{ env.VERSION }}"

    - name: Build with Maven
      run: mvn --batch-mode package --file pom.xml

    - name: Publish to GitHub Maven
      run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up npm
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        scope: "@navima"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set Npm Version
      run: |
        npm version ${{ env.VERSION }} --no-git-tag-version --no-workspaces-update
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to GitHub Npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}